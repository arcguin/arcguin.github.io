<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>π的遐想</title>
  
  <subtitle>关注编程技术分享和程序员文化的博客小随笔</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ai.xgoogle.xyz/"/>
  <updated>2019-08-22T17:19:01.372Z</updated>
  <id>https://ai.xgoogle.xyz/</id>
  
  <author>
    <name>一只小π</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jupyter Notebook修改起始目录配置，解决不生效问题</title>
    <link href="https://ai.xgoogle.xyz/archives/f6dd61e.html"/>
    <id>https://ai.xgoogle.xyz/archives/f6dd61e.html</id>
    <published>2018-08-22T15:46:53.000Z</published>
    <updated>2019-08-22T17:19:01.372Z</updated>
    
    <content type="html"><![CDATA[<h4 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h4><ol><li><p>Win键+R打开cmd命令行窗口，输入命令<code>jupyter notebook --generate-config</code>生成配置文件；</p><p>此步的前提是系统环境变量已配置正确，否则可能会有“jupyter不是内部或外部命令，也不是可运行的程序或批处理文件”的错误提示。这时需更新系统环境变量，或者也可直接跳过，通过下面第2点的方法生成配置文件。</p><a id="more"></a></li><li><p>使用Anaconda Prompt来创建配置文件，命令与第1点中的一样，也是<code>jupyter notebook --generate-config</code>，此环境下不存在找不到命令的异常。</p></li><li><p>默认情况下生成的配置文件路径为<code>C:\Users\用户名\.jupyter\jupyter_notebook_config.py</code></p></li><li><p>编辑上一步的配置文件</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The directory to use for notebooks and kernels.</span><br><span class="line"><span class="deletion">-#c.NotebookApp.notebook_dir = ''</span></span><br><span class="line"><span class="addition">+c.NotebookApp.notebook_dir = 'D:\\workspace\\Python\\notebook'</span></span><br></pre></td></tr></table></figure><p>按上面添加指定的notebook工作目录。</p></li><li><p>在Anaconda Prompt中通过命令<code>jupyter notebook</code>启动，可以看到起始目录已经改成了我们自己设置的。</p></li><li><p>修改开始菜单中Jupyter Notebook的快捷方式：</p><p>操作流程：程序→Anaconda→ Jupyter Notebook→ 右键→ 属性→ 快捷方式→ 去掉“目标”一项中后面的” %USERPROFILE%” 。</p><p>此时再通过开始菜单中的快捷方式打开Notebook时，起始目录也已变成我们自己配置文件中设定的。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;具体方法&quot;&gt;&lt;a href=&quot;#具体方法&quot; class=&quot;headerlink&quot; title=&quot;具体方法&quot;&gt;&lt;/a&gt;具体方法&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Win键+R打开cmd命令行窗口，输入命令&lt;code&gt;jupyter notebook --generate-config&lt;/code&gt;生成配置文件；&lt;/p&gt;
&lt;p&gt;此步的前提是系统环境变量已配置正确，否则可能会有“jupyter不是内部或外部命令，也不是可运行的程序或批处理文件”的错误提示。这时需更新系统环境变量，或者也可直接跳过，通过下面第2点的方法生成配置文件。&lt;/p&gt;
    
    </summary>
    
      <category term="工具使用" scheme="https://ai.xgoogle.xyz/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="jupyter" scheme="https://ai.xgoogle.xyz/tags/jupyter/"/>
    
      <category term="notebook" scheme="https://ai.xgoogle.xyz/tags/notebook/"/>
    
  </entry>
  
  <entry>
    <title>Linux重启后自动执行指定脚本功能</title>
    <link href="https://ai.xgoogle.xyz/archives/5f78267c.html"/>
    <id>https://ai.xgoogle.xyz/archives/5f78267c.html</id>
    <published>2018-08-20T15:24:45.000Z</published>
    <updated>2019-08-18T06:39:00.904Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p><b>通过<code>crontab</code>定时任务实现</b></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>crontab -e</span><br></pre></td></tr></table></figure><ul><li><p>假设需要每次重启后自动执行script脚本：/home/vivek/bin/installnetkit.sh，则只需在crontab中添加如下这一行：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@reboot</span> <span class="regexp">/home/</span>vivek<span class="regexp">/bin/</span>installnetkit.sh</span><br></pre></td></tr></table></figure></li><li><p>当然有些脚本或命令是需要在机器重启后过指定时间后再执行,可以通过下面命令实现重启+5分钟后执行指定脚本：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">@reboot</span> <span class="built_in">sleep</span> <span class="number">300</span> &amp;&amp; /home/wwwjobs/clean-<span class="keyword">static</span>-cache.sh</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h4&gt;&lt;p&gt;&lt;b&gt;通过&lt;code&gt;crontab&lt;/code&gt;定时任务实现&lt;/b&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight elixi
      
    
    </summary>
    
      <category term="Linux" scheme="https://ai.xgoogle.xyz/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://ai.xgoogle.xyz/tags/shell/"/>
    
      <category term="脚本" scheme="https://ai.xgoogle.xyz/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Hexo_Next主题博客接入Gitment实现评论功能</title>
    <link href="https://ai.xgoogle.xyz/archives/aa5c621a.html"/>
    <id>https://ai.xgoogle.xyz/archives/aa5c621a.html</id>
    <published>2018-08-18T04:23:54.000Z</published>
    <updated>2019-08-18T06:39:00.903Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p><a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">Gitment</a>是作者实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。</p><h4 id="接入过程"><a href="#接入过程" class="headerlink" title="接入过程"></a>接入过程</h4><h5 id="1、注册-OAuth-Application"><a href="#1、注册-OAuth-Application" class="headerlink" title="1、注册 OAuth Application"></a>1、注册 OAuth Application</h5><a id="more"></a><p>通过注册地址<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a>进行注册，注册页面如下： </p><p><img src="img/Reg_OAuth.PNG" alt="header"><br>注意<code>Authorization callback URL</code>填上自己网站首页url地址。<br>注册成功会得到一个 client ID 和一个 client secret，将用于以下的配置文件中。 </p><h5 id="2、编辑主题配置文件-config-yml进行配置"><a href="#2、编辑主题配置文件-config-yml进行配置" class="headerlink" title="2、编辑主题配置文件_config.yml进行配置"></a>2、编辑主题配置文件_config.yml进行配置</h5><p>找到Gitment配置区域：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gitment</span></span><br><span class="line"><span class="comment"># Introduction: https://imsun.net/posts/gitment-introduction/</span></span><br><span class="line"><span class="comment"># You can get your Github ID from https://api.github.com/users/&lt;Github username&gt;</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mint:</span> <span class="literal">true</span> <span class="comment"># RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span></span><br><span class="line"><span class="attr">  count:</span> <span class="literal">true</span> <span class="comment"># Show comments count in post meta area</span></span><br><span class="line"><span class="attr">  lazy:</span> <span class="literal">false</span> <span class="comment"># Comments lazy loading with a button</span></span><br><span class="line"><span class="attr">  cleanly:</span> <span class="literal">true</span> <span class="comment"># Hide 'Powered by ...' on footer, and more</span></span><br><span class="line"><span class="attr">  language:</span> <span class="comment"># Force language, or auto switch by theme</span></span><br><span class="line"><span class="attr">  github_user:</span> <span class="string">yourname</span> <span class="comment"># MUST HAVE, Your Github ID</span></span><br><span class="line"><span class="attr">  github_repo:</span> <span class="string">yourname.github.io</span> <span class="comment"># MUST HAVE, The repo you use to store Gitment comments</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">d367821xxxxxxxxx</span> <span class="comment"># MUST HAVE, Github client id for the Gitment</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="number">02</span><span class="string">fcxxxxxxxxxxxxxx</span> <span class="comment"># EITHER this or proxy_gateway, Github access secret token for the Gitment</span></span><br><span class="line"><span class="attr">  proxy_gateway:</span> <span class="comment"># Address of api proxy, See: https://github.com/aimingoo/intersect</span></span><br><span class="line"><span class="attr">  redirect_protocol:</span> <span class="comment"># Protocol of redirect_uri with force_redirect_protocol when mint enabled</span></span><br></pre></td></tr></table></figure><p>其中<code>github_user</code>为你的github用户名，<code>github_repo</code>一定要是仓库的名称，不要写成仓库地址，这里可以保持同github pages共用一个库，当然你也可以选择使用新建的仓库。<code>client_id</code>和<code>client_secret</code>就是上一步注册时得到的。</p><h4 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h4><p>到此通过 hexo d 重新部署应该能看到博客文章页面下已出现Gitment评论区，不过可能存在一些问题。</p><ul><li>登录报错 “[object ProgressEvent]”<br><img src="img/ai_error.PNG" alt="header"><br><b>出错原因：</b>在原开发者版本中调用的js文件里，有访问gitment作者的服务器代码，而作者的服务器不好使了。具体调用的js文件可以在主题第三方插件目录下看到，打开<code>\themes\next\layout\_third-party\comments\gitment.swig</code>文件，定位到如下部分:<figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- LOCAL: You can save these files to your site and update links --&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">if</span></span> theme.gitment.mint %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">set</span></span> CommentsClass = "Gitmint" %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://aimingoo.github.io/gitmint/style/default.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://aimingoo.github.io/gitmint/dist/gitmint.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name">else</span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">set</span></span> CommentsClass = "Gitment" %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://imsun.github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">endif</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- END LOCAL --&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul><p>可以看到<code>gitment.browser.js</code>是原作中使用的js文件，该文件中会调用作者的服务器接口‘<a href="https://gh-oauth.imsun.net’，该接口可能已无法访问，所以我们需要自己来实现接口代替。" target="_blank" rel="noopener">https://gh-oauth.imsun.net’，该接口可能已无法访问，所以我们需要自己来实现接口代替。</a><br><b>解决方法：</b>自己的服务器中创建实现类似作者定义的接口。</p><ul><li><p>在自己的服务器中clone原作者使用的源文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/imsun/gh-oauth-server.git</span><br></pre></td></tr></table></figure></li><li><p>进入项目目录，下载依赖并启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &amp;&amp; nohup npm start &amp;</span><br></pre></td></tr></table></figure></li></ul><p>如果服务运行成功，会在项目目录下的nohup.out文件的结尾提示正在监听3000端口，接着使用nginx搭配https反向代理转发服务器本地3000端口。这样就可以使用自己的服务器网址替换前面提到的作者的接口。</p><ul><li>我已将前面的gitment.swig文件里引用的两个js文件均作了接口替换，同时保存在了我的Hexo博客目录下，所以现在来替换swig文件中的js引用地址：<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- LOCAL: You can save these files to your site and update links --&gt;</span><br><span class="line">    &#123;% if theme.gitment.mint %&#125;</span><br><span class="line">        &#123;% set CommentsClass = "Gitmint" %&#125;</span><br><span class="line">        &lt;link rel="stylesheet" href="https://aimingoo.github.io/gitmint/style/default.css"&gt;</span><br><span class="line"><span class="deletion">-        &lt;script src="https://aimingoo.github.io/gitmint/dist/gitmint.browser.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+        &lt;script src="https://ai.xgoogle.xyz/js/src/gitmint.browser.js"&gt;&lt;/script&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">        &#123;% set CommentsClass = "Gitment" %&#125;</span><br><span class="line">        &lt;link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"&gt;</span><br><span class="line"><span class="deletion">-        &lt;script src="https://imsun.github.io/gitment/dist/gitment.browser.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+        &lt;script src="https://ai.xgoogle.xyz/js/src/gitment.browser.js"&gt;&lt;/script&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;!-- END LOCAL --&gt;</span><br></pre></td></tr></table></figure></li></ul><p>理论上你只需将gitment.swig文件按上面这样修改后，即可在博客中正常使用Gitment评论功能了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/imsun/gitment&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Gitment&lt;/a&gt;是作者实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。&lt;/p&gt;
&lt;h4 id=&quot;接入过程&quot;&gt;&lt;a href=&quot;#接入过程&quot; class=&quot;headerlink&quot; title=&quot;接入过程&quot;&gt;&lt;/a&gt;接入过程&lt;/h4&gt;&lt;h5 id=&quot;1、注册-OAuth-Application&quot;&gt;&lt;a href=&quot;#1、注册-OAuth-Application&quot; class=&quot;headerlink&quot; title=&quot;1、注册 OAuth Application&quot;&gt;&lt;/a&gt;1、注册 OAuth Application&lt;/h5&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://ai.xgoogle.xyz/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://ai.xgoogle.xyz/tags/hexo/"/>
    
      <category term="博客" scheme="https://ai.xgoogle.xyz/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="gitment" scheme="https://ai.xgoogle.xyz/tags/gitment/"/>
    
  </entry>
  
  <entry>
    <title>Hexo_Next主题博客页面显示效果优化</title>
    <link href="https://ai.xgoogle.xyz/archives/3e4c942.html"/>
    <id>https://ai.xgoogle.xyz/archives/3e4c942.html</id>
    <published>2018-08-16T15:31:53.000Z</published>
    <updated>2019-08-18T06:39:00.903Z</updated>
    
    <content type="html"><![CDATA[<h5 id="调整页面显示内容宽度"><a href="#调整页面显示内容宽度" class="headerlink" title="调整页面显示内容宽度"></a>调整页面显示内容宽度</h5><p>原主题页面两侧留白太多就显得没有必要，并且不美观，所以有必要调整一下宽度。</p><ul><li>编辑 <code>/themes/next/source/css/_common/components/post/post-expand.styl</code> 文件，找到如下位置：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@media (max-width: 767px)</span><br><span class="line">改为：</span><br><span class="line">@media (max-width: 1060px)</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li>编辑 <code>/themes/next/source/css/_variables/base.styl</code> 文件，找到如下位置：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$main</span>-desktop                   = 960px</span><br><span class="line"><span class="variable">$main</span>-desktop-large             = 1200px</span><br><span class="line"><span class="variable">$content</span>-desktop                = 700px</span><br><span class="line">改为：</span><br><span class="line"><span class="variable">$main</span>-desktop                   = 1060px</span><br><span class="line"><span class="variable">$main</span>-desktop-large             = 1200px</span><br><span class="line"><span class="variable">$content</span>-desktop                = 800px</span><br></pre></td></tr></table></figure></li></ul><h5 id="调整文章正文顶部与标题行间距"><a href="#调整文章正文顶部与标题行间距" class="headerlink" title="调整文章正文顶部与标题行间距"></a>调整文章正文顶部与标题行间距</h5><ul><li>编辑 <code>/themes/next/source/css/_custom/custom.styl</code> 文件，添加如下内容：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.posts-expand .post-meta &#123;</span><br><span class="line">margin: 10px 0 10px 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="调整博客首页每篇文章之间的间距"><a href="#调整博客首页每篇文章之间的间距" class="headerlink" title="调整博客首页每篇文章之间的间距"></a>调整博客首页每篇文章之间的间距</h5><p>对于主题样式Mist，博客文章列表之间间距过大，整体显示效果较差，考虑调小文章间距。</p><ul><li>编辑 <code>/themes/next/source/css/_schemes/Mist/_posts-expanded.styl</code>文件，找到如下位置：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">.posts-expand &#123;</span><br><span class="line">  padding-top: 0;</span><br><span class="line"></span><br><span class="line">  .post-title,</span><br><span class="line">  .post-meta &#123;</span><br><span class="line">    text-align: <span class="variable">$site</span>-meta-text-align;</span><br><span class="line">    +<span class="function"><span class="title">mobile</span></span>() &#123; text-align: center; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .post-eof &#123; display: none; &#125;</span><br><span class="line"></span><br><span class="line">  .post &#123; margin-top: 120px; &#125;</span><br><span class="line">  .post:first-child &#123; margin-top: 0; &#125;</span><br><span class="line"></span><br><span class="line">  .post-meta &#123;</span><br><span class="line">    margin-top: 5px;</span><br><span class="line">    margin-bottom: 20px;</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><p>修改该部分跟间距相关的两行代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  .post &#123; margin-top: 120px; &#125;</span><br><span class="line">  .post:first-child &#123; margin-top: 0; &#125;</span><br><span class="line">改为：</span><br><span class="line">  .post &#123; </span><br><span class="line">    margin-top: 20px; </span><br><span class="line">    margin-bottom: 30px; </span><br><span class="line">    padding-top: 10px;</span><br><span class="line">    padding-right: 25px;</span><br><span class="line">    padding-bottom: 10px;</span><br><span class="line">    padding-left: 25px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .post:first-child &#123; margin-top: 0; &#125;</span><br></pre></td></tr></table></figure><p>其中的第二句意为取消第一个文章的上边距，这里可以保持默认不作修改。</p><ul><li>文章列表整体的外边距也可以调整，具体文件为 <code>/themes/next/source/css/_schemes/Mist/outline/outline.styl</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.main-inner &#123; margin-top: 80px; &#125;</span><br></pre></td></tr></table></figure></li></ul><p>该文件只有一行，可将边距数值适当改小，比如50px。</p><h5 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h5><ul><li>在 <code>/themes/next/source/css/_custom/custom.styl</code>文件中添加一句：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body &#123; background:url(/images/background.png); &#125;</span><br></pre></td></tr></table></figure></li></ul><p>当然需将相应的背景图片文件(background.png)放到相应的目录下。<br>由于Next主题文章页面背景默认都是透明的，所以背景图片添加后会透到文章显示中来，如此会影响文章页面阅读体验。为了改进，需同样在custom.styl文件下添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.post &#123;</span><br><span class="line">     background: <span class="comment">#fff;</span></span><br><span class="line">     opacity: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如此就可以将文章页面的背景设置为全白显示，同时完全不透明，从而不受添加的背景图片影响。</p><h5 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d --g</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;调整页面显示内容宽度&quot;&gt;&lt;a href=&quot;#调整页面显示内容宽度&quot; class=&quot;headerlink&quot; title=&quot;调整页面显示内容宽度&quot;&gt;&lt;/a&gt;调整页面显示内容宽度&lt;/h5&gt;&lt;p&gt;原主题页面两侧留白太多就显得没有必要，并且不美观，所以有必要调整一下宽度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编辑 &lt;code&gt;/themes/next/source/css/_common/components/post/post-expand.styl&lt;/code&gt; 文件，找到如下位置：  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@media (max-width: 767px)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;改为：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@media (max-width: 1060px)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://ai.xgoogle.xyz/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://ai.xgoogle.xyz/tags/hexo/"/>
    
      <category term="博客" scheme="https://ai.xgoogle.xyz/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Next" scheme="https://ai.xgoogle.xyz/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客文章链接持久化方法</title>
    <link href="https://ai.xgoogle.xyz/archives/52ccf080.html"/>
    <id>https://ai.xgoogle.xyz/archives/52ccf080.html</id>
    <published>2018-08-15T14:49:35.000Z</published>
    <updated>2019-08-18T06:39:00.904Z</updated>
    
    <content type="html"><![CDATA[<h4 id="持久化解决方案"><a href="#持久化解决方案" class="headerlink" title="持久化解决方案"></a>持久化解决方案</h4><h5 id="安装hexo-abbrlink插件"><a href="#安装hexo-abbrlink插件" class="headerlink" title="安装hexo-abbrlink插件"></a>安装hexo-abbrlink插件</h5><p>安装使用<q>hexo-abbrlink插件</q>，自动根据文章时间点生成最终博客文章链接，后期不管怎么修改文章永久链接都不会再变。同时文章链接层级更短，使得博客文章更利于SEO。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h5><p>站点配置文件_config.yml中相应位置按如下修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">permalink: archives/:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  rep: hex    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure><h5 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h5><p>博客文章链接地址最终呈现效果：<br><q><a href="https://yoursite.com/archives/201d9ace.html" target="_blank" rel="noopener">https://yoursite.com/archives/201d9ace.html</a></q></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;持久化解决方案&quot;&gt;&lt;a href=&quot;#持久化解决方案&quot; class=&quot;headerlink&quot; title=&quot;持久化解决方案&quot;&gt;&lt;/a&gt;持久化解决方案&lt;/h4&gt;&lt;h5 id=&quot;安装hexo-abbrlink插件&quot;&gt;&lt;a href=&quot;#安装hexo-abbrlink插件&quot; class=&quot;headerlink&quot; title=&quot;安装hexo-abbrlink插件&quot;&gt;&lt;/a&gt;安装hexo-abbrlink插件&lt;/h5&gt;&lt;p&gt;安装使用&lt;q&gt;hexo-abbrlink插件&lt;/q&gt;，自动根据文章时间点生成最终博客文章链接，后期不管怎么修改文章永久链接都不会再变。同时文章链接层级更短，使得博客文章更利于SEO。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-abbrlink --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://ai.xgoogle.xyz/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://ai.xgoogle.xyz/tags/hexo/"/>
    
      <category term="博客" scheme="https://ai.xgoogle.xyz/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo博客编辑发布文章</title>
    <link href="https://ai.xgoogle.xyz/archives/409d1dce.html"/>
    <id>https://ai.xgoogle.xyz/archives/409d1dce.html</id>
    <published>2018-08-14T04:48:58.000Z</published>
    <updated>2019-08-18T06:39:00.905Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、新建一篇文章"><a href="#1、新建一篇文章" class="headerlink" title="1、新建一篇文章"></a>1、新建一篇文章</h4><p>(1) 在Hexo博客根目录下，进入Git Bash命令窗口中，输入以下命令：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"新文章标题"</span></span><br></pre></td></tr></table></figure><p>(2) 在博客目录下/source/_posts文件夹下，可以看到已经生成相应的博客文件：“新文章标题.md”</p><p>(3) 在该md文件中编辑博客内容。<br>注意：Hexo发布的文章是Markdown格式，Markdown基本语法可参考：<a href="http://www.markdown.cn/" target="_blank" rel="noopener">md基本语法</a>  </p><a id="more"></a><h4 id="2、给文章添加分类和标签"><a href="#2、给文章添加分类和标签" class="headerlink" title="2、给文章添加分类和标签"></a>2、给文章添加分类和标签</h4><p>(1) 在md文件中设置categories和tags属性：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 在这里</span><br><span class="line">date: 2018-08-02 11:41:10</span><br><span class="line">categories: web前端</span><br><span class="line">tags:</span><br><span class="line">- 博客     //多个标签可以这样添加</span><br><span class="line">- hexo</span><br></pre></td></tr></table></figure><h4 id="3、启动服务器，本地测试"><a href="#3、启动服务器，本地测试" class="headerlink" title="3、启动服务器，本地测试"></a>3、启动服务器，本地测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h4 id="4、添加“阅读全文”按钮"><a href="#4、添加“阅读全文”按钮" class="headerlink" title="4、添加“阅读全文”按钮"></a>4、添加“阅读全文”按钮</h4><p>在文章中任意想添加的位置添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><h4 id="5、在博客中添加图片"><a href="#5、在博客中添加图片" class="headerlink" title="5、在博客中添加图片"></a>5、在博客中添加图片</h4><p>(1) 在hexo目录下安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>(2) 在hexo\source 目录下新建一个img文件夹，把图片放置在里面；<br>(3) 在xxx.md中引用图片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![header]( img/header.jpg)</span><br></pre></td></tr></table></figure><h4 id="6、发布到Github上"><a href="#6、发布到Github上" class="headerlink" title="6、发布到Github上"></a>6、发布到Github上</h4><p>(1) 发表的文章在本地预览无误后，在 Git Bash 命令窗口执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>(2) 在浏览器，访问自己的博客域名，即可看到刚 发布的文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1、新建一篇文章&quot;&gt;&lt;a href=&quot;#1、新建一篇文章&quot; class=&quot;headerlink&quot; title=&quot;1、新建一篇文章&quot;&gt;&lt;/a&gt;1、新建一篇文章&lt;/h4&gt;&lt;p&gt;(1) 在Hexo博客根目录下，进入Git Bash命令窗口中，输入以下命令：  &lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;新文章标题&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;(2) 在博客目录下/source/_posts文件夹下，可以看到已经生成相应的博客文件：“新文章标题.md”&lt;/p&gt;
&lt;p&gt;(3) 在该md文件中编辑博客内容。&lt;br&gt;注意：Hexo发布的文章是Markdown格式，Markdown基本语法可参考：&lt;a href=&quot;http://www.markdown.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;md基本语法&lt;/a&gt;  &lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://ai.xgoogle.xyz/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="https://ai.xgoogle.xyz/tags/hexo/"/>
    
      <category term="博客" scheme="https://ai.xgoogle.xyz/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://ai.xgoogle.xyz/archives/4a17b156.html"/>
    <id>https://ai.xgoogle.xyz/archives/4a17b156.html</id>
    <published>2018-08-09T16:00:10.000Z</published>
    <updated>2019-08-18T06:39:00.905Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
